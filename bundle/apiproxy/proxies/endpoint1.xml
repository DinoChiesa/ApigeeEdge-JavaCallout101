<ProxyEndpoint name='endpoint1'>
  <Description>Proxy for Java callout demonstration</Description>
  <HTTPProxyConnection>
    <BasePath>/callout-101</BasePath>
    <Properties/>
    <VirtualHost>secure</VirtualHost>
  </HTTPProxyConnection>

  <FaultRules/>

  <PreFlow name="PreFlow">
      <Request/>
      <Response>
        <Step>
          <Name>AM-Clear-Request-Headers-From-Response</Name>
        </Step>
      </Response>
  </PreFlow>

  <PostFlow name="PostFlow">
      <Request/>
      <Response>
        <Step>
          <Name>JS-EmitElapsed</Name>
        </Step>
      </Response>
  </PostFlow>

  <Flows>
    <Flow name='flow1'>
      <Description>invoke the callout and do nothing more</Description>
      <Request/>
      <Response>
        <Step>
          <Name>Java-Example1</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix ~ "/example1") and (request.verb = "GET")</Condition>
    </Flow>

    <Flow name='flow2'>
      <Description>invoke the callout with a different configuration</Description>
      <Request/>
      <Response>
        <Step>
          <Name>Java-Example2</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix ~ "/example2") and (request.verb = "GET")</Condition>
    </Flow>

    <Flow name='flow3'>
      <Description>invoke the callout with a third configuration</Description>
      <Request/>
      <Response>
        <Step>
          <Name>Java-Example3</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix ~ "/example3") and (request.verb = "GET")</Condition>
    </Flow>

    <Flow name='unknown'>
      <!--
           applies as a "default" flow, in case none of the conditions
           for the above flows evaluated to true.
      -->
      <Description>Unknown request</Description>
      <Request>
        <Step>
          <Name>RF-UnknownRequest</Name>
        </Step>
      </Request>
      <Response/>
    </Flow>

  </Flows>

  <RouteRule name='LoopbackRoute'>
    <!-- no target! no backend call -->
  </RouteRule>

</ProxyEndpoint>
